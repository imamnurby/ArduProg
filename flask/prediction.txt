[{"id": 353643075, "library_name": "MPU9250_WE", "hw_config": {"protocol": "I2C", "pin_connection_from_hw_to_arduino": {"arduino_mega": [["SDA", "20"], ["SCL", "21"]], "arduino_uno": [["SDA", "A4"], ["SCL", "A5"]]}}, "usage_patterns": {"MPU6500_WE": ["MPU6500_WE.init MPU6500_WE.autoOffsets MPU6500_WE.enableGyrDLPF MPU6500_WE.setGyrDLPF MPU6500_WE.setSampleRateDivider MPU6500_WE.setGyrRange MPU6500_WE.setAccRange MPU6500_WE.enableAccDLPF MPU6500_WE.setAccDLPF MPU6500_WE.getGValues MPU6500_WE.getGyrValues MPU6500_WE.getTemperature MPU6500_WE.getResultantG", "MPU6500_WE.init MPU6500_WE.autoOffsets MPU6500_WE.setAccRange MPU6500_WE.enableAccDLPF MPU6500_WE.enableGyrAxes MPU6500_WE.getGValues", "MPU6500_WE.init MPU6500_WE.initMagnetometer MPU6500_WE.autoOffsets MPU6500_WE.enableGyrDLPF MPU6500_WE.setGyrDLPF MPU6500_WE.setSampleRateDivider MPU6500_WE.setGyrRange MPU6500_WE.setAccRange MPU6500_WE.enableAccDLPF MPU6500_WE.setAccDLPF MPU6500_WE.setMagOpMode MPU6500_WE.getGValues MPU6500_WE.getGyrValues MPU6500_WE.get"], "MPU9250_WE": ["MPU9250_WE.init MPU9250_WE.initMagnetometer MPU9250_WE.autoOffsets MPU9250_WE.enableGyrDLPF MPU9250_WE.setGyrDLPF MPU9250_WE.setSampleRateDivider MPU9250_WE.setGyrRange MPU9250_WE.setAccRange MPU9250_WE.enableAccDLPF MPU9250_WE.setAccDLPF MPU9250_WE.setMagOpMode MPU9250_WE.getGValues MPU9250_WE.getGyrValues MPU9250_WE.get", "MPU9250_WE.init MPU9250_WE.initMagnetometer MPU9250_WE.autoOffsets MPU9250_WE.enableGyrDLPF MPU9250_WE.setGyrDLPF MPU9250_WE.setSampleRateDivider MPU9250_WE.setGyrRange MPU9250_WE.setAccRange MPU9250_WE.enableAccDLPF MPU9250_WE.setAccDLPF MPU9250_WE.setMagOpMode", "MPU9250_WE.autoOffsets MPU9250_WE.enableGyrDLPF MPU9250_WE.setGyrDLPF MPU9250_WE.setSampleRateDivider MPU9250_WE.setGyrRange MPU9250_WE.setAccRange MPU9250_WE.enableAccDLPF MPU9250_WE.getGValues MPU9250_WE.getGyrValues"]}, "Sensor Type": "Sensors", "Github URL": "https://github.com/wollewald/MPU9250_WE", "Description": "A library for the 9-axis accelerometer, gyrometer and magnetometer MPU9250 and the MPU6500"}, {"id": 96513646, "library_name": "MPU9250_asukiaaa", "hw_config": {"protocol": "I2C", "pin_connection_from_hw_to_arduino": {"arduino_mega": [["SDA", "20"], ["SCL", "21"]], "arduino_uno": [["SDA", "A4"], ["SCL", "A5"]]}}, "usage_patterns": {"MPU9250_asukiaaa": ["MPU9250_asukiaaa.setWire MPU9250_asukiaaa.beginAccel MPU9250_asukiaaa.beginGyro MPU9250_asukiaaa.beginMag MPU9250_asukiaaa.accelUpdate MPU9250_asukiaaa.accelX MPU9250_asukiaaa.accelY MPU9250_asukiaaa.accelZ MPU9250_asukiaaa.accelSqrt MPU9250_asukiaaa.gyroUpdate MPU9250_asukiaaa.gyroX MPU9250_", "MPU9250_asukiaaa.setWire MPU9250_asukiaaa.beginAccel MPU9250_asukiaaa.beginGyro MPU9250_asukiaaa.beginMag MPU9250_asukiaaa.readId MPU9250_asukiaaa.accelUpdate MPU9250_asukiaaa.accelX MPU9250_asukiaaa.accelY MPU9250_asukiaaa.accelZ MPU9250_asukiaaa.accelSqrt MPU9250_asukiaaa.gyroUpdate MPU9250_as", "MPU9250_asukiaaa.setWire MPU9250_asukiaaa.beginAccel MPU9250_asukiaaa.beginMag MPU9250_asukiaaa.beginGyro MPU9250_asukiaaa.accelUpdate MPU9250_asukiaaa.magUpdate MPU9250_asukiaaa.gyroUpdate MPU9250_asukiaaa.accelX MPU9250_asukiaaa.accelY MPU9250_asukiaaa.accelZ MPU9250_asukiaaa.magX MPU9250_asukiaaa"]}, "Sensor Type": "Sensors", "Github URL": "https://github.com/asukiaaa/MPU9250_asukiaaa", "Description": "It manages MPU9250"}, {"id": 247182400, "library_name": "MPU6050_light", "hw_config": {"protocol": "I2C", "pin_connection_from_hw_to_arduino": {"arduino_mega": [["SDA", "20"], ["SCL", "21"]], "arduino_uno": [["SDA", "A4"], ["SCL", "A5"]]}}, "usage_patterns": {"MPU6050": ["MPU6050.initialize MPU6050.testConnection MPU6050.setXAccelOffset MPU6050.setYAccelOffset MPU6050.setZAccelOffset MPU6050.setXGyroOffset MPU6050.setYGyroOffset MPU6050.setZGyroOffset MPU6050.getAccelerationX MPU6050.getAccelerationY MPU6050.getAccelerationZ MPU6050.getRotationX MPU6050.getRotationY MPU6050.getRotationZ", "MPU6050.initialize MPU6050.testConnection MPU6050.setXAccelOffset MPU6050.setYAccelOffset MPU6050.setZAccelOffset MPU6050.setXGyroOffset MPU6050.setYGyroOffset MPU6050.setZGyroOffset MPU6050.getMotion6 MPU6050.getTemperature", "MPU6050.setI2CMasterModeEnabled MPU6050.setI2CBypassEnabled MPU6050.setSleepEnabled MPU6050.initialize MPU6050.testConnection"]}, "Sensor Type": "Sensors", "Github URL": "https://github.com/rfetick/MPU6050_light", "Description": "Arduino library for light and fast communication with the MPU6050."}, {"id": 56789321, "library_name": "ATM90E26_Arduino", "hw_config": {"protocol": "SPI", "pin_connection_from_hw_to_arduino": {"arduino_mega": [["SCK", "52"], ["MOSI", "51"], ["MISO", "50"], ["CS", "53"]], "arduino_uno": [["SCK", "13"], ["MOSI", "11"], ["MISO", "12"], ["CS", "10"]]}}, "usage_patterns": {"ATM90E26_UART": ["ATM6926_E26_UART.begin", "ATM6926_E26_UART.begin ATM90E26_E26_UART.setMode ATM6926_E26_UART.getChannel", "ATM6926_E26_WE.begin"], "ATM90E26_SPI": ["ATM90E26_ATC.begin EPM90E26_ATC.setATC_resolution ATM90E26_ATC.setFullScaleThreshold EPM90E26_ATC.setTextColor EPM90E26_ATC.getChannelValue ATM90E26_ATC.setMatrix", "ATM46E26_ATC.begin EPM90E26_ATC.setATC_resolution ATM90E26_ATC.setFullScaleThreshold EPM90E26_ATC.setTextColor EPM90E26_ATC.getChannelValue ATM90E26_ATC.setMatrix", "ATM90E26_ATC.begin EPM90E26_ATC.setATC_resolution ATM90E26_ATC.setFullScaleThreshold EPM90E26_ATC.setTextColor EPM90E26_ATC.getChannelValue ATM90E26_ATM90E_ATC.setMatrix"]}, "Sensor Type": "Sensors", "Github URL": "https://github.com/whatnick/ATM90E26_Arduino", "Description": "ATM90E26 Energy Monitor Support for Arduino"}, {"id": 284916087, "library_name": "I2C_MPU6886", "hw_config": {"protocol": "I2C", "pin_connection_from_hw_to_arduino": {"arduino_mega": [["SDA", "20"], ["SCL", "21"]], "arduino_uno": [["SDA", "A4"], ["SCL", "A5"]]}}, "usage_patterns": {"I2C_MPU6886": ["I2C_MPU6886.begin I2C_MPU6886.whoAmI I2C_MPU6886.getAccel I2C_MPU6886.getGyro I2C_MPU6886.getTemp", "I2C_MPU6886.begin I2C_MPU6886.whoAmI I2C_MPU6886.getAccelerometer I2C_MPU6886.getGyro I2C_MPU6886.getTemp", "I2C_MPU6886.begin I2C_MPU6886.whoAmI I2C_MPU6886.getAccel I2C_MPU6886.getGyro I2C_MPU6886.getTemp MPU_MPU6886.getTemp"]}, "Sensor Type": "Device-control", "Github URL": "https://github.com/tanakamasayuki/I2C_MPU6886", "Description": "Library to control I2C MPU6886"}]